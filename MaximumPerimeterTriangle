import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the maximumPerimeterTriangle function below.

    static boolean isPossible(int l1,int l2,int l3){
        if((Math.pow(l1,2)) <= (Math.pow(l2,2) + Math.pow(l3,2)))
        {
            return true;
        }
        return false;
    }

    static int[] maximumPerimeterTriangle(int[] sticks) {

            int[] result = new int[3];
            Arrays.sort(sticks);

            int count = 0;
            int s[] = new int[sticks.length];

            for(int i =sticks.length-1;i>=0;i--){

                s[count++] = sticks[i];

            }
            
            boolean flag = true;
            for(int i=0;i<s.length-2;i++){
                
                if(isPossible(s[i],s[i+1],s[i+2])){
                    result[0] = s[i+2];
                    result[1] = s[i+1];
                    result[2] = s[i];
                    flag = false;
                    break;
                }
            }
            if(flag == true){
                System.out.println("-1");
                return new int[0];
            }
            return result;
            }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] sticks = new int[n];

        String[] sticksItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int sticksItem = Integer.parseInt(sticksItems[i]);
            sticks[i] = sticksItem;
        }

        int[] result = maximumPerimeterTriangle(sticks);

        if(result.length == 0){
            bufferedWriter.write("-1");
        }
        else{
        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write(" ");
            }
        }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
